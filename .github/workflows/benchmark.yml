name: OpenTelemetry-cpp benchmarks
on:
  push:
    branches:
      - benchmark-action

permissions:
  contents: write
  deployments: write

jobs:
  benchmark:
    name: Run OpenTelemetry-cpp benchmarks
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.run_benchmarks.outputs.test }}
      api_result: ${{ steps.run_benchmarks.outputs.api_json }}
      sdk_result: ${{ steps.run_benchmarks.outputs.sdk_json }}
      exporters_result: ${{ steps.run_benchmarks.outputs.exporters_json }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Mount Bazel Cache
        uses: actions/cache@v2
        env:
          cache-name: bazel_cache
        with:
          path: /home/runner/.cache/bazel
          key: bazel_benchmark
      - name: setup
        run: |
          sudo ./ci/setup_cmake.sh
          sudo ./ci/setup_ci_environment.sh
      - name: Run benchmark
        id: run_benchmarks
        run: |
          #ci/do_ci.sh bazel.benchmark
          echo "::set-output name=test::hello_world"
          echo "::set-output name=api_json::$(cat api-benchmark_result.json)"
          echo "::set-output name=sdk_json::$(cat sdk-benchmark_result.json)"
          echo "::set-output name=exporters_json::$(cat exporters-benchmark_result.json)"
  store_benchmark:
    needs: benchmark
    strategy:
      matrix:
        components: ["api", "sdk", "exporters"]
    name: Store benchmark result
    runs-on: ubuntu-latest
    steps:
      - name: Store json files
        id: store_json
        run: |
          echo ${{needs.benchmark.outputs.output1}}
          echo ${{needs.benchmark.outputs.api_result}} | tee api-benchmark_result.json
          echo ${{needs.benchmark.outputs.sdk_result}} | tee sdk-benchmark_result.json
          echo ${{needs.benchmark.outputs.exporters_result}} | tee exporters-benchmark_result.json
      - name: Push benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: OpenTelemetry-cpp ${{ matrix.components }} Benchmark
          tool: 'googlecpp'
          output-file-path: ${{ matrix.components }}-benchmark_result.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true
          # Show alert with commit comment on detecting possible performance regression
          alert-threshold: '200%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@esigo'
          gh-pages-branch: gh-pages
          benchmark-data-dir-path: benchmarks
